name: Patch vulnerable images (Action Local Containerd)
on:
  workflow_dispatch:
jobs:
  patch:
    runs-on: ubuntu-latest
    # used for pushing patched image to GHCR
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
              {
              "debug": true,
              "experimental": true,
                  "features": {
                  "containerd-snapshotter": true
                  }
              }

      - name: Build Docker image
        run: |
          docker buildx build --load -t docker.io/local/focal:20200925 -f Dockerfile.local-test .
          docker images

      - name: Download Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          tar -xzf trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          chmod +x trivy
          sudo mv trivy /usr/local/bin/trivy
        env:
          TRIVY_VERSION: 0.59.1

      - name: Get Trivy report
        run: |
          sudo trivy image --format json --output focal:20200925.json docker.io/local/focal:20200925
          sudo cat focal:20200925.json

      - name: Get socket path
        run: |
          url=$(docker context inspect | jq -r .[0].Endpoints.docker.Host)
          socket_path=$(echo "$url" | awk -F// '{print $2}')
          echo "$socket_path"
          echo "SOCKET=$socket_path" >> $GITHUB_ENV

      - name: Run Copa action
        id: copa
        uses: project-copacetic/copa-action@v1.2.1
        with:
          image: "docker.io/local/focal:20200925"
          image-report: "focal:20200925.json"
          patched-tag: "patched"
          timeout: 5m
          custom-socket: ${SOCKET}
          output: out.json

      - run: sudo cat out.json

      #   # see https://github.com/docker/login-action#usage for other registries
      # - name: Login to GHCR
      #   if: steps.copa.conclusion == 'success'
      #   id: login
      #   uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Push patched image
      #   if: steps.login.conclusion == 'success'
      #   run: |
      #     # retag if needed
      #     docker tag ${{ steps.copa.outputs.patched-image }} ghcr.io/project-copacetic/copa-action/test/${{ steps.copa.outputs.patched-image }}
      #     docker push ghcr.io/project-copacetic/copa-action/test/${{ steps.copa.outputs.patched-image }}